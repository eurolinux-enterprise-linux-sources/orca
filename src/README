Orca v3.6.3

Introduction
========================================================================

Orca is a free, open source, flexible, and extensible screen reader
that provides access to the graphical desktop via user-customizable
combinations of speech, braille, and/or magnification.

Orca works with applications and toolkits that support the assistive
technology service provider interface (AT-SPI), which is the primary
assistive technology infrastructure for the Solaris and Linux
operating environments.  Applications and toolkits supporting the
AT-SPI include the GNOME GTK+ toolkit, the Java platform's Swing
toolkit, OpenOffice/LibreOffice, Gecko, and WebKitGtk.  AT-SPI support
for the KDE Qt toolkit is currently being pursued.

See also http://live.gnome.org/Orca for detailed English and Spanish
information on Orca, including how to run Orca, how to communicate
with the Orca user community, and where to log bugs and feature
requests.

Dependencies
========================================================================

Orca v3.6.x is supported on GNOME 3.6.x only.  We highly suggest you
use the latest releases of GNOME because they contain accessibility
infrastructure and application bug fixes that help Orca work better.

Orca also has the following dependencies:

* Python           - Python platform (minimum version 2.7)
* pygobject-3.0    - Python bindings for the GObject library
* gtk+-3.0         - Gtk+ toolkit
* json-py          - a JSON (http://json.org) reader and writer in Python
* python-speechd   - Python bindings for Speech Dispatcher (optional)
* BrlTTY           - BrlTTY support for braille (optional)
* BrlAPI           - BrlAPI support for braille (optional)
* py-setproctitle  - Python library to set the process title (optional)

YOU ALSO NEED THE LATEST AT-SPI AND ATK FOR THE GNOME 3.5.x DEVELOPMENT
RELEASES.  THEY CONTAIN VERY IMPORTANT BUG FIXES!

NOTE: If you have multiple versions of the python interpreter installed
on your machine, you should set the PYTHON environment variable when 
configuring Orca.  For example:

   PYTHON=/usr/bin/python2.7 ./autogen.sh

or

   PYTHON=/usr/bin/python2.7 ./configure

NOTE FOR BRLTTY USERS:
========================================================================

Orca depends upon the Python bindings for BrlAPI available in BrlTTY v3.8
or better.  You can determine if the Python bindings for BrlAPI are
installed by running the following command:

python -c "import brlapi"

If you get the following error, the Python bindings for BrlAPI are not
installed.  This is most likely because whoever built BrlTTY did not
have Pyrex installed before building BrlTTY:

Traceback (most recent call last):
  File "<string>", line 1, in <module>
ImportError: No module named brlapi

If you run into this, install python-pyrex and rebuild/reinstall BrlTTY.

See also http://live.gnome.org/Orca/Braille for more information on
BrlTTY and also using liblouis for contracted braille.

Running Orca
========================================================================

When you run Orca for the first time, you will be prompted for your
initial user preferences.  The first time you run Orca, you also need
to log out and log back in in order for accessibility to be enabled in
your environment.  If you wish to modify your Orca preferences in the
future, you can press "Insert+space" while Orca is running, or you can
re-run orca with the "--setup" command line option.

You can bypass the Orca setup utility by running orca with the
"--no-setup" option.  This is useful for running from environments
such as the login screen.

To get help while running Orca, press "Insert+F1".  This will enable
"learn mode", which provides a spoken and brailled description of what
various keyboard and braille input device actions will do.  To exit
learn mode, press "Escape."  Finally, the preferences dialog contains
a "Key Bindings" tab that lists the keyboard binding for Orca.

To quit Orca, you can press "Insert+q" or run "orca --quit" from the
command line.

For more information, see the Orca documentation which is available
within Orca as well as at: http://library.gnome.org/users/orca/stable

Scripting Orca
========================================================================

So, you want to write a script for Orca?  The best thing to do is 
start by looking at other scripts under the src/orca/scripts/ hierarchy
of the source tree.  Also, the docs/doc-set/internals.html file contains
detailed information about the internal workings of Orca.
